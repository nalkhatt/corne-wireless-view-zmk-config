/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        new_combo {
            bindings = <&kp H>;
            key-positions = <14 15>;
            timeout-ms = <50>;
        };

        new_combo {
            bindings = <&kp I>;
            key-positions = <15 16>;
        };

        new_combo {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <13 14>;
        };

        new_combo {
            bindings = <&kp LEFT_CONTROL>;
            key-positions = <13 16>;
        };

        new_combo {
            bindings = <&kp LEFT_ALT>;
            key-positions = <13 28>;
        };

        new_combo {
            bindings = <&kp LEFT_GUI>;
            key-positions = <13 17>;
        };

        new_combo {
            bindings = <&kp DELETE>;
            key-positions = <25 28>;
        };

        new_combo {
            bindings = <&kp COMMA>;
            key-positions = <27 28>;
        };

        new_combo {
            bindings = <&kp PERIOD>;
            key-positions = <26 27>;
        };

        new_combo {
            bindings = <&kp SEMICOLON>;
            key-positions = <4 16>;
        };

        new_combo {
            bindings = <&kp SLASH>;
            key-positions = <17 29>;
        };

        new_combo {
            bindings = <&kp BACKSLASH>;
            key-positions = <17 5>;
        };

        new_combo {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <3 15 38>;
        };

        new_combo {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <38 16 4>;
        };

        new_combo {
            bindings = <&kp SQT>;
            key-positions = <16 28>;
        };

        new_combo {
            bindings = <&kp TAB>;
            key-positions = <14 14 14 13 38>;
        };

        new_combo {
            bindings = <&kp ENTER>;
            key-positions = <14 15 38>;
        };

        new_combo {
            bindings = <&to 3>;
            key-positions = <37 16>;
        };

        new_combo {
            bindings = <&to 1>;
            key-positions = <37 15>;
        };

        new_combo {
            bindings = <&to 2>;
            key-positions = <37 14>;
        };

        new_combo {
            bindings = <&to 4>;
            key-positions = <37 13>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
  &kp TAB  &kp V  &kp W     &kp F      &kp P                          &kp G      &kp Y  &kp U      &kp I    &kp O     &kp P  &kp BSPC
&kp LCTRL  &kp A  &kp O     &kp E      &kp T                          &kp M      &kp H  &kp J      &kp K    &kp L  &kp SEMI   &kp SQT
&kp LSHFT  &kp B  &kp U     &kp C      &kp D                          &kp Y      &kp N  &kp M  &kp COMMA  &kp DOT  &kp FSLH   &kp ESC
                         &kp BSPC  &kp RSHFT  &space_shift SPACE LEFT_SHIFT    &kp RET  &mo 2   &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
   &kp TAB        &kp N1        &kp N2        &kp N3        &kp N4        &kp N5      &kp N6    &kp N7    &kp N8     &kp N9  &kp N0  &kp BSPC
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp DOWN    &kp UP  &kp RIGHT  &trans    &trans
 &kp LSHFT        &trans        &trans        &trans        &trans        &trans      &trans    &trans    &trans     &trans  &trans    &trans
                                            &kp LGUI        &trans     &kp SPACE     &kp RET    &trans  &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
  &kp TAB  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET   &kp AMPS  &kp KP_MULTIPLY  &kp LPAR  &kp RPAR   &kp BSPC
&kp LCTRL    &trans  &trans    &trans    &trans     &trans    &kp MINUS  &kp EQUAL         &kp LBKT  &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT    &trans  &trans    &trans    &trans     &trans    &kp UNDER   &kp PLUS         &kp LBRC  &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI    &trans  &kp SPACE      &kp RET     &trans         &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
