/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        combo_H {
            bindings = <&kp H>;
            key-positions = <14 15>;
            timeout-ms = <50>;
        };

        combo_I {
            bindings = <&kp I>;
            key-positions = <15 16>;
        };

        combo_SHIFT {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <13 14>;
        };

        combo_CTRL {
            bindings = <&sk LEFT_CONTROL>;
            key-positions = <13 16>;
        };

        combo_ALT {
            bindings = <&sk LEFT_ALT>;
            key-positions = <13 28>;
        };

        combo_WIN {
            bindings = <&kp LEFT_GUI>;
            key-positions = <13 17>;
        };

        combo_BACKSPACE {
            bindings = <&kp DELETE>;
            key-positions = <25 28>;
        };

        combo_COMMA {
            bindings = <&kp COMMA>;
            key-positions = <27 28>;
        };

        combo_PERIOD {
            bindings = <&kp PERIOD>;
            key-positions = <26 27>;
        };

        combo_SEMICOLON {
            bindings = <&kp SEMICOLON>;
            key-positions = <4 16>;
        };

        combo_F_SLASH {
            bindings = <&kp SLASH>;
            key-positions = <17 29>;
        };

        combo_B_SLASH {
            bindings = <&kp BACKSLASH>;
            key-positions = <17 5>;
        };

        combo_OPARENTHESES {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <3 15 37>;
        };

        combo_CPARENTHESES {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <16 4 37>;
        };

        combo_APOSTRAPHE {
            bindings = <&kp SQT>;
            key-positions = <16 28>;
        };

        combo_TAB {
            bindings = <&kp TAB>;
            key-positions = <14 14 14 13 37>;
        };

        combo_ENTER {
            bindings = <&kp ENTER>;
            key-positions = <14 15 37>;
        };

        combo_LAYER3 {
            bindings = <&tog 3>;
            key-positions = <37 16>;
        };

        combo_LAYER1 {
            bindings = <&tog 1>;
            key-positions = <37 15>;
        };

        combo_LAYER2 {
            bindings = <&tog 2>;
            key-positions = <37 14>;
        };

        combo_LAYER4 {
            bindings = <&tog 4>;
            key-positions = <37 13>;
        };
    };

    behaviors {
        new_behavior: new_behavior {
            compatible = "zmk,behavior-hold-tap";
            label = "NEW_BEHAVIOR";
            bindings =
                <&mo>,
                <&sk>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            global-quick-tap;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <0 1 2 3 4 5 6 7 8 12 13 14 15 16 17 18 19 20 24 25 26 27 28 29 30 31 32>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
  &kp TAB  &kp V  &kp W     &kp F                  &kp P                 &kp G      &kp Y  &kp U      &kp I    &kp O     &kp P  &kp BSPC
&kp LCTRL  &kp A  &kp O     &kp E                  &kp T                 &kp M      &kp H  &kp J      &kp K    &kp L  &kp SEMI   &kp SQT
&kp LSHFT  &kp B  &kp U     &kp C                  &kp D                 &kp Y      &kp N  &kp M  &kp COMMA  &kp DOT  &kp FSLH   &kp ESC
                         &kp BSPC  &new_behavior 5 LCTRL  &mt LEFT_SHIFT SPACE    &kp RET  &mo 2   &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans    &kp PAGE_UP  &kp HOME    &kp UP    &kp END     &trans      &kp N6    &kp N7    &kp N8     &kp N9  &kp N0  &kp BSPC
&trans  &kp PAGE_DOWN  &kp LEFT  &kp DOWN  &kp RIGHT      &to 0    &kp LEFT  &kp DOWN    &kp UP  &kp RIGHT  &trans    &trans
&trans         &trans    &trans    &trans     &trans     &trans      &trans    &trans    &trans     &trans  &trans    &trans
                                 &kp LGUI     &trans  &kp SPACE     &kp RET    &trans  &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
  &kp TAB  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET   &kp AMPS  &kp KP_MULTIPLY  &kp LPAR  &kp RPAR   &kp BSPC
&kp LCTRL    &trans  &trans    &trans    &trans     &trans    &kp MINUS  &kp EQUAL         &kp LBKT  &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT    &trans  &trans    &trans    &trans     &trans    &kp UNDER   &kp PLUS         &kp LBRC  &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI    &trans  &kp SPACE      &kp RET     &trans         &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &kp N7  &kp N8  &kp N9  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp N0  &kp N1  &kp N2  &kp N3  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp N4  &kp N5  &kp N6  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F5   &kp F6   &kp F7   &kp F8  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F1   &kp F2   &kp F3   &kp F4  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                          &trans   &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_5 {
            bindings = <
&trans  &kp ESC  &kp K   &kp LBKT   &kp RBKT  &kp GRAVE    &trans  &trans  &trans  &trans  &trans  &trans
&trans    &kp L  &kp R      &kp S      &kp N      &kp J    &trans  &trans  &trans  &trans  &trans  &trans
&trans    &kp Z  &kp X  &kp EQUAL  &kp MINUS      &kp Q    &trans  &trans  &trans  &trans  &trans  &trans
                           &trans     &trans     &trans    &trans  &trans  &trans
            >;
        };
    };
};
