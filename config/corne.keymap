/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        combo_H {
            bindings = <&kp H>;
            key-positions = <14 15>;
            timeout-ms = <50>;
        };

        combo_I {
            bindings = <&kp CAPSLOCK>;
            key-positions = <15 16>;
        };

        combo_SHIFT {
            bindings = <&sk LEFT_SHIFT>;
            key-positions = <13 14>;
        };

        combo_CTRL {
            bindings = <&sk LEFT_CONTROL>;
            key-positions = <13 16>;
        };

        combo_ALT {
            bindings = <&sk LEFT_ALT>;
            key-positions = <13 28>;
        };

        combo_WIN {
            bindings = <&kp LEFT_GUI>;
            key-positions = <13 17>;
        };

        combo_BACKSPACE {
            bindings = <&kp DELETE>;
            key-positions = <25 28>;
        };

        combo_COMMA {
            bindings = <&kp COMMA>;
            key-positions = <27 28>;
        };

        combo_PERIOD {
            bindings = <&kp PERIOD>;
            key-positions = <26 27>;
        };

        combo_SEMICOLON {
            bindings = <&kp SEMICOLON>;
            key-positions = <4 16>;
        };

        combo_F_SLASH {
            bindings = <&kp SLASH>;
            key-positions = <17 29>;
        };

        combo_B_SLASH {
            bindings = <&kp BACKSLASH>;
            key-positions = <17 5>;
        };

        combo_OPARENTHESES {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <3 15 37>;
        };

        combo_CPARENTHESES {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <16 4 37>;
        };

        combo_APOSTRAPHE {
            bindings = <&kp SQT>;
            key-positions = <16 28>;
        };

        combo_TAB {
            bindings = <&kp TAB>;
            key-positions = <14 14 14 13 38>;
        };

        combo_ENTER {
            bindings = <&kp ENTER>;
            key-positions = <15 38 16>;
        };

        combo_TO_NUMBERS {
            bindings = <&tog 3>;
            key-positions = <37 16>;
            layers = <0>;
        };

        combo_TO_NAV {
            bindings = <&tog 2>;
            key-positions = <37 15>;
            layers = <0>;
        };

        combo_MOUSE_disabled {
            bindings = <&trans>;
            key-positions = <37 14>;
            layers = <0>;
        };

        combo_TO_FUNCTIONS {
            bindings = <&tog 4>;
            key-positions = <37 13>;
            layers = <0>;
        };
    };

    behaviors {
        new_behavior: new_behavior {
            compatible = "zmk,behavior-hold-tap";
            label = "NEW_BEHAVIOR";
            bindings =
                <&mo>,
                <&sk>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            global-quick-tap;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <0 1 2 3 4 5 6 7 8 12 13 14 15 16 17 18 19 20 24 25 26 27 28 29 30 31 32>;
        };
        layer_toggle0: layer_toggle0 {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER_TOGGLE0";
            #binding-cells = <0>;
            bindings =
                <&mt B A>,
                <&tog 3>;
        };
        layer0_toggle: layer0_toggle {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER0_TOGGLE";
            #binding-cells = <0>;
            bindings =
                <&none>,
                <&to 0>;
        };
        space_tapdance: space_tapdance {
            compatible = "zmk,behavior-tap-dance";
            label = "SPACE_TAPDANCE";
            #binding-cells = <0>;
            bindings =
                <&lt 1 SPACE>,
                <&sk LEFT_SHIFT>,
                <&to 2>,
                <&to 4>;
        };
        test: test {
            compatible = "zmk,behavior-hold-tap";
            label = "TEST";
            bindings =
                <&sk>,
                <&sk>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
        };
        layer2_toggle_y: layer2_toggle_y {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER2_TOGGLE_Y";
            #binding-cells = <0>;
            bindings =
                <&kp Y>,
                <&to 2>;
        };
        layer3_toggle_h: layer3_toggle_h {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER3_TOGGLE_H";
            #binding-cells = <0>;
            bindings =
                <&kp H>,
                <&to 3>;
        };
        layer4_toggle_n: layer4_toggle_n {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER4_TOGGLE_N";
            #binding-cells = <0>;
            bindings =
                <&kp N>,
                <&to 4>;
        };
        space_hold: space_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "SPACE_HOLD";
            bindings =
                <&tog>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base_0 {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
  &kp TAB  &kp Q  &kp W                 &kp E          &kp R            &kp T      &kp Y  &kp U      &kp I    &kp O     &kp P  &kp BSPC
&kp LCTRL  &kp A  &kp S                 &kp D          &kp F            &kp G      &kp H  &kp J      &kp K    &kp L  &kp SEMI   &kp SQT
&kp LSHFT  &kp Z  &kp X                 &kp C          &kp V            &kp B      &kp N  &kp M  &kp COMMA  &kp DOT  &kp FSLH   &kp ESC
                         &test LEFT_ALT RCTRL  &kp BACKSPACE  &space_tapdance    &kp RET  &mo 0   &kp RALT
            >;
        };

        Base_1 {
            bindings = <
&none     &kp P    &kp O      &kp I    &kp U  &layer2_toggle_y    &trans  &trans  &trans  &trans  &trans  &trans
&none  &kp SEMI    &kp L      &kp K    &kp J  &layer3_toggle_h    &trans  &trans  &trans  &trans  &trans  &trans
&none  &kp FSLH  &kp DOT  &kp COMMA    &kp M  &layer4_toggle_n    &trans  &trans  &trans  &trans  &trans  &trans
                              &bt 0  &kp TAB            &trans    &trans  &trans  &trans
            >;
        };

        Navigation {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none    &kp PAGE_UP  &kp HOME          &kp UP    &kp END   &none      &kp N6    &kp N7    &kp N8     &kp N9  &kp N0  &kp BSPC
&none  &kp PAGE_DOWN  &kp LEFT        &kp DOWN  &kp RIGHT   &to 0    &kp LEFT  &kp DOWN    &kp UP  &kp RIGHT  &trans    &trans
&none          &none     &none           &none      &none   &none      &trans    &trans    &trans     &trans  &trans    &trans
                                &layer_toggle0     &trans  &trans     &kp RET    &trans  &kp RALT
            >;
        };

        Numbers {
            bindings = <
&none   &none  &kp N7          &kp N8        &kp N9   &none    &trans  &trans  &trans  &trans  &trans  &trans
&none   &none  &kp N4          &kp N5        &kp N6   &to 0    &trans  &trans  &trans  &trans  &trans  &trans
&none  &kp N0  &kp N1    &kp NUMBER_2  &kp NUMBER_3   &none    &trans  &trans  &trans  &trans  &trans  &trans
                       &layer0_toggle        &trans  &trans    &trans  &trans  &trans
            >;
        };

        FN_keys {
            bindings = <
&none  &kp F9  &kp F10  &kp F11  &kp F12  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&none  &kp F5   &kp F6   &kp F7   &kp F8   &to 0    &trans  &trans  &trans  &trans  &trans  &trans
&none  &kp F1   &kp F2   &kp F3   &kp F4  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                         &trans   &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
